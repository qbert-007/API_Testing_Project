<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="66" passed="64" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-25T17:55:03 IST" name="QA_Touch_Api_Test_Suite" finished-at="2021-04-25T17:57:45 IST" duration-ms="162364">
    <groups>
      <group name="setterGroup">
        <method signature="CountTestRuns.TC_001_CountTestRun(java.lang.String, org.testng.ITestContext)[pri:1, instance:testRuns.CountTestRuns@21e360a]" name="TC_001_CountTestRun" class="testRuns.CountTestRuns"/>
      </group> <!-- setterGroup -->
    </groups>
    <test started-at="2021-04-25T17:55:03 IST" name="Project_Functionality_Test" finished-at="2021-04-25T17:57:45 IST" duration-ms="162364">
      <class name="projects.Post_CreateProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:projects.Post_CreateProject@58695725]" started-at="2021-04-25T17:55:26 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="CreateProjectWithExistingName(java.lang.String)[pri:0, instance:projects.Post_CreateProject@58695725]" started-at="2021-04-25T17:55:26 IST" name="CreateProjectWithExistingName" finished-at="2021-04-25T17:55:28 IST" duration-ms="2505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MyProject100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateProjectWithExistingName -->
        <test-method signature="CreateProjectWithNonExistingName(java.lang.String)[pri:0, instance:projects.Post_CreateProject@58695725]" started-at="2021-04-25T17:55:28 IST" name="CreateProjectWithNonExistingName" finished-at="2021-04-25T17:55:31 IST" duration-ms="2364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[MiniProject300]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateProjectWithNonExistingName -->
      </class> <!-- projects.Post_CreateProject -->
      <class name="projects.Get_CountOfTotalNoOfProjects">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:projects.Get_CountOfTotalNoOfProjects@18d87d80]" started-at="2021-04-25T17:55:03 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="CheckStatusCode()[pri:0, instance:projects.Get_CountOfTotalNoOfProjects@18d87d80]" started-at="2021-04-25T17:55:03 IST" name="CheckStatusCode" finished-at="2021-04-25T17:55:14 IST" duration-ms="11335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckStatusCode -->
        <test-method signature="validateCount()[pri:0, instance:projects.Get_CountOfTotalNoOfProjects@18d87d80]" started-at="2021-04-25T17:56:12 IST" name="validateCount" finished-at="2021-04-25T17:56:17 IST" duration-ms="4610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCount -->
      </class> <!-- projects.Get_CountOfTotalNoOfProjects -->
      <class name="testCases.Get_ListAllModulesOfProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testCases.Get_ListAllModulesOfProject@f5acb9d]" started-at="2021-04-25T17:56:17 IST" name="beforeClassMethod" finished-at="2021-04-25T17:56:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="withExistingProjectKey(java.lang.String)[pri:0, instance:testCases.Get_ListAllModulesOfProject@f5acb9d]" started-at="2021-04-25T17:56:17 IST" name="withExistingProjectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:19 IST" duration-ms="2039" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExistingProjectKey -->
        <test-method signature="withExistingProjectKey(java.lang.String)[pri:0, instance:testCases.Get_ListAllModulesOfProject@f5acb9d]" started-at="2021-04-25T17:56:19 IST" name="withExistingProjectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:21 IST" duration-ms="2041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExistingProjectKey -->
        <test-method signature="CheckSuccessTrue()[pri:0, instance:testCases.Get_ListAllModulesOfProject@f5acb9d]" started-at="2021-04-25T17:56:21 IST" name="CheckSuccessTrue" finished-at="2021-04-25T17:56:21 IST" depends-on-methods="testCases.Get_ListAllModulesOfProject.withExistingProjectKey" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CheckSuccessTrue -->
        <test-method signature="withExisting_projectKey_HavingNoModules(java.lang.String)[pri:0, instance:testCases.Get_ListAllModulesOfProject@f5acb9d]" started-at="2021-04-25T17:56:33 IST" name="withExisting_projectKey_HavingNoModules" finished-at="2021-04-25T17:56:35 IST" duration-ms="1971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VVlP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey_HavingNoModules -->
        <test-method signature="withNonExisting_projectKey(java.lang.String)[pri:0, instance:testCases.Get_ListAllModulesOfProject@f5acb9d]" started-at="2021-04-25T17:56:53 IST" name="withNonExisting_projectKey" finished-at="2021-04-25T17:56:55 IST" duration-ms="2287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withNonExisting_projectKey -->
      </class> <!-- testCases.Get_ListAllModulesOfProject -->
      <class name="defects.CreateDefect">
        <test-method signature="REQ_16(java.lang.String)[pri:16, instance:defects.CreateDefect@4f2b503c]" started-at="2021-04-25T17:57:26 IST" name="REQ_16" finished-at="2021-04-25T17:57:29 IST" duration-ms="2622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_16 -->
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:defects.CreateDefect@4f2b503c]" started-at="2021-04-25T17:57:26 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_17(java.lang.String)[pri:16, instance:defects.CreateDefect@4f2b503c]" started-at="2021-04-25T17:57:29 IST" name="REQ_17" finished-at="2021-04-25T17:57:31 IST" duration-ms="2127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_17 -->
      </class> <!-- defects.CreateDefect -->
      <class name="release.Get_CountReleases">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:release.Get_CountReleases@7c24b813]" started-at="2021-04-25T17:55:19 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:19 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="CountRealeasesOfExistingProjectKey(java.lang.String)[pri:0, instance:release.Get_CountReleases@7c24b813]" started-at="2021-04-25T17:55:19 IST" name="CountRealeasesOfExistingProjectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:55:22 IST" duration-ms="2220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CountRealeasesOfExistingProjectKey -->
        <test-method signature="CountRealeasesOfExistingProjectKey(java.lang.String)[pri:0, instance:release.Get_CountReleases@7c24b813]" started-at="2021-04-25T17:55:22 IST" name="CountRealeasesOfExistingProjectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:55:24 IST" duration-ms="2109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CountRealeasesOfExistingProjectKey -->
        <test-method signature="CountRealeasesOfNonExistingProjectKey(java.lang.String)[pri:0, instance:release.Get_CountReleases@7c24b813]" started-at="2021-04-25T17:55:24 IST" name="CountRealeasesOfNonExistingProjectKey" finished-at="2021-04-25T17:55:26 IST" duration-ms="2198" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CountRealeasesOfNonExistingProjectKey -->
        <test-method signature="ValidateCount(java.lang.String)[pri:0, instance:release.Get_CountReleases@7c24b813]" started-at="2021-04-25T17:56:04 IST" name="ValidateCount" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:08 IST" duration-ms="4248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateCount -->
        <test-method signature="ValidateCount(java.lang.String)[pri:0, instance:release.Get_CountReleases@7c24b813]" started-at="2021-04-25T17:56:08 IST" name="ValidateCount" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:12 IST" duration-ms="4384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateCount -->
      </class> <!-- release.Get_CountReleases -->
      <class name="testCases.Get_ListAllTestCasesOfProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testCases.Get_ListAllTestCasesOfProject@4fb3ee4e]" started-at="2021-04-25T17:56:29 IST" name="beforeClassMethod" finished-at="2021-04-25T17:56:29 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="withExisting_projectKey(java.lang.String)[pri:0, instance:testCases.Get_ListAllTestCasesOfProject@4fb3ee4e]" started-at="2021-04-25T17:56:29 IST" name="withExisting_projectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:31 IST" duration-ms="1915" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey -->
        <test-method signature="withExisting_projectKey(java.lang.String)[pri:0, instance:testCases.Get_ListAllTestCasesOfProject@4fb3ee4e]" started-at="2021-04-25T17:56:31 IST" name="withExisting_projectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:33 IST" duration-ms="1944" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey -->
        <test-method signature="withExisting_projectKey_HavingNoTestCases(java.lang.String)[pri:0, instance:testCases.Get_ListAllTestCasesOfProject@4fb3ee4e]" started-at="2021-04-25T17:56:37 IST" name="withExisting_projectKey_HavingNoTestCases" finished-at="2021-04-25T17:56:39 IST" duration-ms="2200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VVlP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey_HavingNoTestCases -->
        <test-method signature="withNonExisting_projectKey(java.lang.String)[pri:0, instance:testCases.Get_ListAllTestCasesOfProject@4fb3ee4e]" started-at="2021-04-25T17:56:55 IST" name="withNonExisting_projectKey" finished-at="2021-04-25T17:56:57 IST" duration-ms="2038" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withNonExisting_projectKey -->
      </class> <!-- testCases.Get_ListAllTestCasesOfProject -->
      <class name="defects.ListSeverityForDefects">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:defects.ListSeverityForDefects@1b2abca6]" started-at="2021-04-25T17:57:18 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:18 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_12()[pri:12, instance:defects.ListSeverityForDefects@1b2abca6]" started-at="2021-04-25T17:57:18 IST" name="REQ_12" finished-at="2021-04-25T17:57:20 IST" duration-ms="1980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_12 -->
      </class> <!-- defects.ListSeverityForDefects -->
      <class name="requirements.CountRequirementForProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:requirements.CountRequirementForProject@6392827e]" started-at="2021-04-25T17:55:49 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:49 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_19(java.lang.String)[pri:0, instance:requirements.CountRequirementForProject@6392827e]" started-at="2021-04-25T17:55:49 IST" name="REQ_19" data-provider="projectKeyProvider" finished-at="2021-04-25T17:55:52 IST" duration-ms="2658" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_19 -->
        <test-method signature="REQ_19(java.lang.String)[pri:0, instance:requirements.CountRequirementForProject@6392827e]" started-at="2021-04-25T17:55:52 IST" name="REQ_19" data-provider="projectKeyProvider" finished-at="2021-04-25T17:55:54 IST" duration-ms="2056" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_19 -->
      </class> <!-- requirements.CountRequirementForProject -->
      <class name="requirements.ListRequirementsForProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:requirements.ListRequirementsForProject@342c38f8]" started-at="2021-04-25T17:57:31 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_18(java.lang.String)[pri:18, instance:requirements.ListRequirementsForProject@342c38f8]" started-at="2021-04-25T17:57:31 IST" name="REQ_18" finished-at="2021-04-25T17:57:34 IST" duration-ms="3209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_18 -->
        <test-method signature="REQ_19Fail(java.lang.String)[pri:18, instance:requirements.ListRequirementsForProject@342c38f8]" started-at="2021-04-25T17:57:34 IST" name="REQ_19Fail" finished-at="2021-04-25T17:57:36 IST" duration-ms="2119" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_19Fail -->
      </class> <!-- requirements.ListRequirementsForProject -->
      <class name="testCases.Post_CreateModule">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testCases.Post_CreateModule@5d7148e2]" started-at="2021-04-25T17:55:35 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:35 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="ExistingModuleNameExistingKey(java.lang.String, java.lang.String)[pri:0, instance:testCases.Post_CreateModule@5d7148e2]" started-at="2021-04-25T17:55:35 IST" name="ExistingModuleNameExistingKey" finished-at="2021-04-25T17:55:37 IST" duration-ms="2200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGMd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Login1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExistingModuleNameExistingKey -->
        <test-method signature="NonExistingModuleNameExistingKey(java.lang.String, java.lang.String)[pri:1, instance:testCases.Post_CreateModule@5d7148e2]" started-at="2021-04-25T17:56:57 IST" name="NonExistingModuleNameExistingKey" finished-at="2021-04-25T17:56:59 IST" duration-ms="2006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGMd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Search1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NonExistingModuleNameExistingKey -->
        <test-method signature="ExistingModuleNameNonExistingKey(java.lang.String, java.lang.String)[pri:3, instance:testCases.Post_CreateModule@5d7148e2]" started-at="2021-04-25T17:57:10 IST" name="ExistingModuleNameNonExistingKey" finished-at="2021-04-25T17:57:12 IST" duration-ms="1962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Login1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ExistingModuleNameNonExistingKey -->
        <test-method signature="NonExistingModuleNameNonExistingKey(java.lang.String, java.lang.String)[pri:4, instance:testCases.Post_CreateModule@5d7148e2]" started-at="2021-04-25T17:57:12 IST" name="NonExistingModuleNameNonExistingKey" finished-at="2021-04-25T17:57:14 IST" duration-ms="1964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Search1000]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NonExistingModuleNameNonExistingKey -->
      </class> <!-- testCases.Post_CreateModule -->
      <class name="testRuns.ListUsersInProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testRuns.ListUsersInProject@306e95ec]" started-at="2021-04-25T17:55:45 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_09(java.lang.String, org.testng.ITestContext)[pri:0, instance:testRuns.ListUsersInProject@306e95ec]" started-at="2021-04-25T17:55:45 IST" name="REQ_09" data-provider="projectKeyProvider" finished-at="2021-04-25T17:55:47 IST" duration-ms="1840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_09 -->
        <test-method signature="REQ_09(java.lang.String, org.testng.ITestContext)[pri:0, instance:testRuns.ListUsersInProject@306e95ec]" started-at="2021-04-25T17:55:47 IST" name="REQ_09" data-provider="projectKeyProvider" finished-at="2021-04-25T17:55:49 IST" duration-ms="1842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_09 -->
      </class> <!-- testRuns.ListUsersInProject -->
      <class name="testRuns.ListTestRuns">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testRuns.ListTestRuns@58d75e99]" started-at="2021-04-25T17:57:01 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="TC_003_TestRuns(java.lang.String, org.testng.ITestContext)[pri:1, instance:testRuns.ListTestRuns@58d75e99]" started-at="2021-04-25T17:57:01 IST" name="TC_003_TestRuns" depends-on-groups="setterGroup" finished-at="2021-04-25T17:57:05 IST" duration-ms="4058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003_TestRuns -->
        <test-method signature="TC_004_TestRuns(org.testng.ITestContext)[pri:2, instance:testRuns.ListTestRuns@58d75e99]" started-at="2021-04-25T17:57:09 IST" name="TC_004_TestRuns" finished-at="2021-04-25T17:57:10 IST" duration-ms="1596" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004_TestRuns -->
      </class> <!-- testRuns.ListTestRuns -->
      <class name="defects.ListDefectStatus">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:defects.ListDefectStatus@209da20d]" started-at="2021-04-25T17:57:16 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_11()[pri:10, instance:defects.ListDefectStatus@209da20d]" started-at="2021-04-25T17:57:16 IST" name="REQ_11" finished-at="2021-04-25T17:57:18 IST" duration-ms="1960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_11 -->
      </class> <!-- defects.ListDefectStatus -->
      <class name="testCases.Get_CountOfTotalTestCasesOfProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testCases.Get_CountOfTotalTestCasesOfProject@543588e6]" started-at="2021-04-25T17:56:25 IST" name="beforeClassMethod" finished-at="2021-04-25T17:56:25 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="withExisting_projectKey(java.lang.String)[pri:0, instance:testCases.Get_CountOfTotalTestCasesOfProject@543588e6]" started-at="2021-04-25T17:56:25 IST" name="withExisting_projectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:27 IST" duration-ms="1954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey -->
        <test-method signature="withExisting_projectKey(java.lang.String)[pri:0, instance:testCases.Get_CountOfTotalTestCasesOfProject@543588e6]" started-at="2021-04-25T17:56:27 IST" name="withExisting_projectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:29 IST" duration-ms="1936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey -->
        <test-method signature="withExisting_projectKey_HavingNoTestCases(java.lang.String)[pri:0, instance:testCases.Get_CountOfTotalTestCasesOfProject@543588e6]" started-at="2021-04-25T17:56:35 IST" name="withExisting_projectKey_HavingNoTestCases" finished-at="2021-04-25T17:56:37 IST" duration-ms="2070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VVlP]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey_HavingNoTestCases -->
        <test-method signature="withExisting_projectKey_ValidateCount(java.lang.String)[pri:0, instance:testCases.Get_CountOfTotalTestCasesOfProject@543588e6]" started-at="2021-04-25T17:56:39 IST" name="withExisting_projectKey_ValidateCount" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:44 IST" duration-ms="4581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey_ValidateCount -->
        <test-method signature="withExisting_projectKey_ValidateCount(java.lang.String)[pri:0, instance:testCases.Get_CountOfTotalTestCasesOfProject@543588e6]" started-at="2021-04-25T17:56:44 IST" name="withExisting_projectKey_ValidateCount" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:48 IST" duration-ms="4449" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExisting_projectKey_ValidateCount -->
        <test-method signature="withNonExisting_projectKey(java.lang.String)[pri:0, instance:testCases.Get_CountOfTotalTestCasesOfProject@543588e6]" started-at="2021-04-25T17:56:50 IST" name="withNonExisting_projectKey" finished-at="2021-04-25T17:56:53 IST" duration-ms="2237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withNonExisting_projectKey -->
      </class> <!-- testCases.Get_CountOfTotalTestCasesOfProject -->
      <class name="projects.Delete_RemoveProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:projects.Delete_RemoveProject@1af2d44a]" started-at="2021-04-25T17:56:00 IST" name="beforeClassMethod" finished-at="2021-04-25T17:56:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="TC_009_DeleteProject(java.lang.String, org.testng.ITestContext)[pri:0, instance:projects.Delete_RemoveProject@1af2d44a]" started-at="2021-04-25T17:56:00 IST" name="TC_009_DeleteProject" finished-at="2021-04-25T17:56:02 IST" duration-ms="1865" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at projects.Delete_RemoveProject.TC_009_DeleteProject(Delete_RemoveProject.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_009_DeleteProject -->
      </class> <!-- projects.Delete_RemoveProject -->
      <class name="testRuns.CountTestRuns">
        <test-method signature="TC_001_CountTestRun(java.lang.String, org.testng.ITestContext)[pri:1, instance:testRuns.CountTestRuns@21e360a]" started-at="2021-04-25T17:56:59 IST" name="TC_001_CountTestRun" finished-at="2021-04-25T17:57:01 IST" duration-ms="2003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001_CountTestRun -->
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testRuns.CountTestRuns@21e360a]" started-at="2021-04-25T17:56:59 IST" name="beforeClassMethod" finished-at="2021-04-25T17:56:59 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="TC_002CountTestRun(java.lang.String)[pri:2, instance:testRuns.CountTestRuns@21e360a]" started-at="2021-04-25T17:57:07 IST" name="TC_002CountTestRun" finished-at="2021-04-25T17:57:09 IST" duration-ms="1351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002CountTestRun -->
      </class> <!-- testRuns.CountTestRuns -->
      <class name="defects.CountDefectsInProject$ListAvailableDefectPriority">
        <test-method signature="REQ_15(java.lang.String)[pri:15, instance:defects.CountDefectsInProject$ListAvailableDefectPriority@6fd83fc1]" started-at="2021-04-25T17:57:24 IST" name="REQ_15" finished-at="2021-04-25T17:57:26 IST" duration-ms="1972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_15 -->
      </class> <!-- defects.CountDefectsInProject$ListAvailableDefectPriority -->
      <class name="release.Get_ListAllReleasesOfProject">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:release.Get_ListAllReleasesOfProject@2c35e847]" started-at="2021-04-25T17:56:21 IST" name="beforeClassMethod" finished-at="2021-04-25T17:56:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="withExistingProjectKey(java.lang.String)[pri:0, instance:release.Get_ListAllReleasesOfProject@2c35e847]" started-at="2021-04-25T17:56:21 IST" name="withExistingProjectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:23 IST" duration-ms="2160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExistingProjectKey -->
        <test-method signature="withExistingProjectKey(java.lang.String)[pri:0, instance:release.Get_ListAllReleasesOfProject@2c35e847]" started-at="2021-04-25T17:56:23 IST" name="withExistingProjectKey" data-provider="projectKeyProvider" finished-at="2021-04-25T17:56:25 IST" duration-ms="1932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withExistingProjectKey -->
        <test-method signature="withNonExistingProjectKey(java.lang.String)[pri:0, instance:release.Get_ListAllReleasesOfProject@2c35e847]" started-at="2021-04-25T17:56:48 IST" name="withNonExistingProjectKey" finished-at="2021-04-25T17:56:50 IST" duration-ms="2008" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- withNonExistingProjectKey -->
      </class> <!-- release.Get_ListAllReleasesOfProject -->
      <class name="testRuns.ListTestRunsResult">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testRuns.ListTestRunsResult@74751b3]" started-at="2021-04-25T17:55:54 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="TC_005_TestRunResult(java.lang.String, org.testng.ITestContext)[pri:0, instance:testRuns.ListTestRunsResult@74751b3]" started-at="2021-04-25T17:55:54 IST" name="TC_005_TestRunResult" data-provider="projectKeyProvider" finished-at="2021-04-25T17:55:56 IST" duration-ms="2025" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005_TestRunResult -->
        <test-method signature="TC_005_TestRunResult(java.lang.String, org.testng.ITestContext)[pri:0, instance:testRuns.ListTestRunsResult@74751b3]" started-at="2021-04-25T17:55:56 IST" name="TC_005_TestRunResult" data-provider="projectKeyProvider" finished-at="2021-04-25T17:55:58 IST" duration-ms="2014" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005_TestRunResult -->
      </class> <!-- testRuns.ListTestRunsResult -->
      <class name="defects.ListIssueTypeForDefects">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:defects.ListIssueTypeForDefects@e15b7e8]" started-at="2021-04-25T17:57:20 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_13()[pri:12, instance:defects.ListIssueTypeForDefects@e15b7e8]" started-at="2021-04-25T17:57:20 IST" name="REQ_13" finished-at="2021-04-25T17:57:22 IST" duration-ms="1949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_13 -->
      </class> <!-- defects.ListIssueTypeForDefects -->
      <class name="testRuns.UpdateTestRunStatus">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testRuns.UpdateTestRunStatus@52af26ee]" started-at="2021-04-25T17:57:05 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="TC_007_UpdateRunStatus(java.lang.String, java.lang.String, java.lang.String)[pri:1, instance:testRuns.UpdateTestRunStatus@52af26ee]" started-at="2021-04-25T17:57:05 IST" name="TC_007_UpdateRunStatus" finished-at="2021-04-25T17:57:07 IST" duration-ms="2241" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[nqZ6]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NWR4z]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_UpdateRunStatus -->
        <test-method signature="TC_008_UpdateInvalidRunStatus(java.lang.String)[pri:7, instance:testRuns.UpdateTestRunStatus@52af26ee]" started-at="2021-04-25T17:57:14 IST" name="TC_008_UpdateInvalidRunStatus" finished-at="2021-04-25T17:57:16 IST" duration-ms="2056" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_008_UpdateInvalidRunStatus -->
      </class> <!-- testRuns.UpdateTestRunStatus -->
      <class name="testRuns.ListTestRunsStatus">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testRuns.ListTestRunsStatus@741a8937]" started-at="2021-04-25T17:55:58 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="TC_006_TestRuns_Status()[pri:0, instance:testRuns.ListTestRunsStatus@741a8937]" started-at="2021-04-25T17:55:58 IST" name="TC_006_TestRuns_Status" finished-at="2021-04-25T17:56:00 IST" duration-ms="2040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_006_TestRuns_Status -->
      </class> <!-- testRuns.ListTestRunsStatus -->
      <class name="requirements.ListRequirementDocs">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:requirements.ListRequirementDocs@43dac38f]" started-at="2021-04-25T17:57:39 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_21(java.lang.String)[pri:20, instance:requirements.ListRequirementDocs@43dac38f]" started-at="2021-04-25T17:57:39 IST" name="REQ_21" data-provider="projectKeyProvider" finished-at="2021-04-25T17:57:41 IST" duration-ms="2164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_21 -->
        <test-method signature="REQ_21(java.lang.String)[pri:20, instance:requirements.ListRequirementDocs@43dac38f]" started-at="2021-04-25T17:57:41 IST" name="REQ_21" data-provider="projectKeyProvider" finished-at="2021-04-25T17:57:43 IST" duration-ms="2335" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[BJaX]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_21 -->
      </class> <!-- requirements.ListRequirementDocs -->
      <class name="defects.ListAvailableDefectPriority">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:defects.ListAvailableDefectPriority@bae7dc0]" started-at="2021-04-25T17:57:22 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_14()[pri:12, instance:defects.ListAvailableDefectPriority@bae7dc0]" started-at="2021-04-25T17:57:22 IST" name="REQ_14" finished-at="2021-04-25T17:57:24 IST" duration-ms="2019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_14 -->
      </class> <!-- defects.ListAvailableDefectPriority -->
      <class name="testRuns.DeleteTestRun">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testRuns.DeleteTestRun@5ba3f27a]" started-at="2021-04-25T17:56:02 IST" name="beforeClassMethod" finished-at="2021-04-25T17:56:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="TC_009_DeleteTestRun(java.lang.String, org.testng.ITestContext)[pri:0, instance:testRuns.DeleteTestRun@5ba3f27a]" started-at="2021-04-25T17:56:02 IST" name="TC_009_DeleteTestRun" finished-at="2021-04-25T17:56:04 IST" duration-ms="2008" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@53d6e959]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at testRuns.DeleteTestRun.TC_009_DeleteTestRun(DeleteTestRun.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_009_DeleteTestRun -->
      </class> <!-- testRuns.DeleteTestRun -->
      <class name="projects.Get_ListAllProjects">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:projects.Get_ListAllProjects@618425b5]" started-at="2021-04-25T17:55:15 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="Check_SuccessStatus()[pri:0, instance:projects.Get_ListAllProjects@618425b5]" started-at="2021-04-25T17:55:15 IST" name="Check_SuccessStatus" finished-at="2021-04-25T17:55:19 IST" duration-ms="4672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Check_SuccessStatus -->
      </class> <!-- projects.Get_ListAllProjects -->
      <class name="testCases.Post_CreateTestCase">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:testCases.Post_CreateTestCase@25fb8912]" started-at="2021-04-25T17:55:37 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:37 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="Existing_projectKey_Existing_sectionKey(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Post_CreateTestCase@25fb8912]" started-at="2021-04-25T17:55:37 IST" name="Existing_projectKey_Existing_sectionKey" finished-at="2021-04-25T17:55:39 IST" duration-ms="2152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGMd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vwMbp]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SingleValued]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Existing_projectKey_Existing_sectionKey -->
        <test-method signature="Existing_projectKey_NonExisting_sectionKey(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Post_CreateTestCase@25fb8912]" started-at="2021-04-25T17:55:39 IST" name="Existing_projectKey_NonExisting_sectionKey" finished-at="2021-04-25T17:55:41 IST" duration-ms="2054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGMd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SingleValued]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Existing_projectKey_NonExisting_sectionKey -->
        <test-method signature="NonExisting_projectKey_Existing_sectionKey(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Post_CreateTestCase@25fb8912]" started-at="2021-04-25T17:55:41 IST" name="NonExisting_projectKey_Existing_sectionKey" finished-at="2021-04-25T17:55:43 IST" duration-ms="2075" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[vwMbp]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SingleValued]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NonExisting_projectKey_Existing_sectionKey -->
        <test-method signature="NonExisting_projectKey_NonExisting_sectionKey(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Post_CreateTestCase@25fb8912]" started-at="2021-04-25T17:55:43 IST" name="NonExisting_projectKey_NonExisting_sectionKey" finished-at="2021-04-25T17:55:45 IST" duration-ms="2016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SingleValued]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NonExisting_projectKey_NonExisting_sectionKey -->
      </class> <!-- testCases.Post_CreateTestCase -->
      <class name="requirements.CreateRequirementDoc">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:requirements.CreateRequirementDoc@d5b810e]" started-at="2021-04-25T17:57:36 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:36 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="REQ_21(java.lang.String, java.lang.String)[pri:20, instance:requirements.CreateRequirementDoc@d5b810e]" started-at="2021-04-25T17:57:36 IST" name="REQ_21" finished-at="2021-04-25T17:57:39 IST" duration-ms="2457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0z34]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_21 -->
      </class> <!-- requirements.CreateRequirementDoc -->
      <class name="requirements.CreateNewRequirement">
        <test-method signature="REQ_22(java.lang.String, java.lang.String)[pri:22, instance:requirements.CreateNewRequirement@2ed2d9cb]" started-at="2021-04-25T17:57:43 IST" name="REQ_22" finished-at="2021-04-25T17:57:45 IST" duration-ms="2329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGda]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[111a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- REQ_22 -->
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:requirements.CreateNewRequirement@2ed2d9cb]" started-at="2021-04-25T17:57:43 IST" name="beforeClassMethod" finished-at="2021-04-25T17:57:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
      </class> <!-- requirements.CreateNewRequirement -->
      <class name="config.SetUp">
        <test-method is-config="true" signature="setUpBeforeSuite(java.lang.String, java.lang.String)[pri:0, instance:config.SetUp@1e04fa0a]" started-at="2021-04-25T17:55:02 IST" name="setUpBeforeSuite" finished-at="2021-04-25T17:55:03 IST" duration-ms="1127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[apidemo]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b3ebb47d91f541526182cf7cdb51aae20ebc46a45740130c3f17b0cf9ab3a152]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpBeforeSuite -->
      </class> <!-- config.SetUp -->
      <class name="release.Post_CreateNewRelease">
        <test-method is-config="true" signature="beforeClassMethod()[pri:0, instance:release.Post_CreateNewRelease@7bd4937b]" started-at="2021-04-25T17:55:31 IST" name="beforeClassMethod" finished-at="2021-04-25T17:55:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassMethod -->
        <test-method signature="CreateRelease_ExistingProjectKey(java.lang.String, java.lang.String)[pri:0, instance:release.Post_CreateNewRelease@7bd4937b]" started-at="2021-04-25T17:55:31 IST" name="CreateRelease_ExistingProjectKey" finished-at="2021-04-25T17:55:33 IST" duration-ms="2212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[RGMd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[milestone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateRelease_ExistingProjectKey -->
        <test-method signature="CreateRelease_NonExistingProjectKey(java.lang.String, java.lang.String)[pri:0, instance:release.Post_CreateNewRelease@7bd4937b]" started-at="2021-04-25T17:55:33 IST" name="CreateRelease_NonExistingProjectKey" finished-at="2021-04-25T17:55:35 IST" duration-ms="2042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[aa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[milestone]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateRelease_NonExistingProjectKey -->
      </class> <!-- release.Post_CreateNewRelease -->
    </test> <!-- Project_Functionality_Test -->
  </suite> <!-- QA_Touch_Api_Test_Suite -->
</testng-results>
